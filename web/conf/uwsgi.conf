[uwsgi]
# set the http port and socket
socket = /tmp/uwsgi-picturedetector-web.sock
http-to = /tmp/uwsgi-picturedetector-web.sock
http = :9300 # testovaci http port

buffer-size = 8192

# vyrobi master process
master = true
# aby se jmeno procesu po reloadu (sighup) nezmenilo
procname = /www/picturedetector/web/bin/picturedetector-web-uwsgi
# stopne se pri sigterm misto sigint
die-on-term = true
# smaze pidfile a socket pri exitu
vacuum = true

# ze aby se vytvoril po reloadu novy log soubor
log-reopen = yes
# ze aby mel log spravna prava a sel cist pres :8888
logfile-chmod = 644


# nastaveni procesu
processes = 1
threads = 0
max-requests = 100

# pidfile
pidfile = /www/picturedetector/web/run/szn-picturedetector-web.pid
# zapne daemon rezim a logovani do souboru
daemonize = /www/picturedetector/web/log/web-uwsgi_log

# adresar projektu
chdir = /www/picturedetector/web

# pridani cest do PYTHONPATH
pythonpath = /www/picturedetector/web/server

# aplikace
wsgi-file = /www/picturedetector/web/server/app.wsgi

# Zaheslovani administrace
route = ^/admin basicauth:Restricted access for Admin picturedetector,admin:aaa

# mapovani statiky (pro testovaci http port)
static-map = /img=/www/picturedetector/web/static/img
static-map = /js=/www/picturedetector/web/static/js
static-map = /css=/www/picturedetector/web/static/css

log-format = %(addr) - %(user) [%(ltime)] "%(method) %(uri) %(proto)" %(status) %(size) "%(referer)" "%(uagent)"
